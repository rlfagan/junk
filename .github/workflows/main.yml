name: SCANOSS WorkFlow Demo  # Workflow name.

on:
  push:
    branches:
      - '*'  # Runs the workflow on any branch push

jobs:
  scan-and-generate-sbom:
    runs-on: ubuntu-latest  # Specifies the runner environment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4  # Checks out repository code

      - name: Log in to GitHub Docker Registry
        if: env.DOCKER_AUTH_REQUIRED == 'true'  # Conditional login if Docker authentication is required
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run SCANOSS Analysis for License - Encryption - Vulnerabilities
        run: |
          # Pull the latest SCANOSS container image
          docker pull ghcr.io/scanoss/scanoss-py:v1.19.0

          # Run SCANOSS scan and generate a CycloneDX SBOM
         # docker run --rm -v $(pwd):/scanoss ghcr.io/scanoss/scanoss-py:v1.19.0 scan ./ --key txnUfW0xwF0KI1U1RW5sDSBL --format cyclonedx -o cycloneDX.json

          # Run SCANOSS cryptography component analysis and save results
          
          #docker run --rm -v $(pwd):/scanoss ghcr.io/scanoss/scanoss-py:v1.19.0 comp crypto --key txnUfW0xwF0KI1U1RW5sDSBL --purl pkg:github/heimdal/heimdal > crypto_results.txt

      #- name: Upload SBOM Results
       # uses: actions/upload-artifact@v4  # Stores artifacts for use in later jobs
        #with:
         # name: scanoss-results
        #  path: |
         #   ./cycloneDX.json
          #  ./crypto_results.txt  # Uploads both SBOM and cryptography results

  process-vulnerabilities:
    runs-on: ubuntu-latest
    needs: scan-and-generate-sbom  # Ensures this job runs only after SBOM generation is complete

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  #    - name: Download SBOM Results
   #     uses: actions/download-artifact@v4
    #    with:
     #     name: scanoss-results  # Retrieves the previously generated SBOM and crypto results
      #    path: ./
##
  #    - name: Install Python Dependencies
   #     run: |
    #      # Upgrade pip and install necessary Python libraries for vulnerability processing
     #     python -m pip install --upgrade pip
      #    pip install pandas requests tabulate matplotlib kaleido numpy


  generate-charts:
    runs-on: ubuntu-latest
    needs: process-vulnerabilities  # Ensures this job runs only after vulnerability processing
  steps:
      - name: Append Chart Insights to GitHub Summary
        run: |
          # Append the contents of summary.md (if it exists) to GitHub's job summary
          if [ -f summary.md ]; then
            cat summary.md >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Error: summary.md not found!" >> $GITHUB_STEP_SUMMARY
          fi
